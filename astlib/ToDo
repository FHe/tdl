Essentially every part of the system needs more testing.

Unimplemented /very broken features:

  - builtin help system.  Not implemented.

  - exceptions: raise and try/except/finally, etc.
      run time exceptions are sort of working, in that a message is displayed.
      syntax errors (compile-time) needs work
      error propagation is not working properly, and needs designing.



Some pieces that are working (at least partially) but need much more testing:
 
   - procedures (definition and execution): seems to be working....
   - Import / ImportFrom: this is working (for me), with both import and
      from-import both support importing either tdl modules OR python modules.

  - SymbolTable: seems to be working....


The conventions / documentation for "system settings" (what's the path for
   loading modules, etc) is not well thought out.


Shell Program:
   import of tdl code from a file seems to be working fine.  Errors are not
   handled that gracefully.

Testing: 
   started some unit testing, should do much more, probably with nose packaage

-- 
Other issues:
 - The initial loading of libraries (builtn, numpy, locally defined functions)
   should be re-implemented to use the builtin symbolTable.import_module(),
   and the list/code for what is imported on startup should be moved out of
   compiler.py and into its own file.


 - use PyReadline (from ipython) for windows
 - use h5py


Functions to add to builtins:
   ls, dir, cd, pwd, listdir
   more
   string functions (strfind, strsplit, etc...)
   read_ascii
   time:  timestamp, sleep, date

add hdf5 things
