x = arange(-1,4.,0.02)
a = 10.20406
b =  2.70503
c = -0.51304
random_seed(1)
noise = random(0, 0.005, distribution='normal', npts=len(x))
data  = (a+b*x)*exp(c*x*x)  + noise

# build model and residual
avar = 2.
bvar =-1.0
cvar = 0.4

def model = (avar + bvar*x)*exp(cvar*x*x)
def resid = data - model

print '# Actual values   = ', [a,b,c]
print '# Starting values = ', [avar,bvar,cvar]

_plot.title= 'data (red) and starting point for fit'
newplot x, data,  color='red', marker='+'
plot    x, model, color='blue', style='dashed'
input "hit enter to continue"

t0 = get_timestamp()
## the real fit
results = array.minimize('resid', ['avar','bvar','cvar'])

fit_time = get_timestamp() -t0

print '# Best-fit values = ', [avar, bvar, cvar]
print '# elapsed time, # of iterations = ', fit_time, _sys.fit_iterations

_plot.title= 'data (red) and best fit'
newplot x, data,  color='red', marker='+'
plot    x, model, color='black',style='solid',marker='o'
input "hit enter to continue"
#sleep(2.0)

_plot.title= 'Residual and starting noise'
newplot x, resid,  color='black', marker='o'
plot    x, noise,  color='red',marker='+'
